//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MPOP_Dashboard_CMS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class mpop_uatEntities : DbContext
    {
        public mpop_uatEntities()
            : base("name=mpop_uatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<T_Dashboard_CMS_Role> T_Dashboard_CMS_Role { get; set; }
        public virtual DbSet<T_Dashboard_CMS_UserRole> T_Dashboard_CMS_UserRole { get; set; }
        public virtual DbSet<T_Mpop_Contestant> T_Mpop_Contestant { get; set; }
        public virtual DbSet<DashboardPage> DashboardPages { get; set; }
        public virtual DbSet<T_Dashboard_CMS_User> T_Dashboard_CMS_User { get; set; }
        public virtual DbSet<T_Mpop_VoteOpeningandClosing> T_Mpop_VoteOpeningandClosing { get; set; }
        public virtual DbSet<T_Dashboard_CMS_RolePermission> T_Dashboard_CMS_RolePermission { get; set; }
        public virtual DbSet<T_Dashboard_CMS_Page> T_Dashboard_CMS_Page { get; set; }
        public virtual DbSet<T_Dashboard_CMS_MPTBillCharge> T_Dashboard_CMS_MPTBillCharge { get; set; }
        public virtual DbSet<T_Dashboard_CMS_MyTelBillCharge> T_Dashboard_CMS_MyTelBillCharge { get; set; }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_Role_Select_Result> sp_MPOP__Dashboard_Role_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_Role_Select_Result>("sp_MPOP__Dashboard_Role_Select");
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_User_SelectedByID_Result> sp_MPOP__Dashboard_User_SelectedByID(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_User_SelectedByID_Result>("sp_MPOP__Dashboard_User_SelectedByID", useridParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_User_EncryptedKey_SelectedByPassword_Result> sp_MPOP__Dashboard_User_EncryptedKey_SelectedByPassword(string password)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_User_EncryptedKey_SelectedByPassword_Result>("sp_MPOP__Dashboard_User_EncryptedKey_SelectedByPassword", passwordParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_Role_SelectedByID_Result> sp_MPOP__Dashboard_Role_SelectedByID(string roleID)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_Role_SelectedByID_Result>("sp_MPOP__Dashboard_Role_SelectedByID", roleIDParameter);
        }
    
        public virtual int sp_MPOP__Dashboard_User_ChangePassword(string userID, string password, string encryptedKey)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var encryptedKeyParameter = encryptedKey != null ?
                new ObjectParameter("EncryptedKey", encryptedKey) :
                new ObjectParameter("EncryptedKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP__Dashboard_User_ChangePassword", userIDParameter, passwordParameter, encryptedKeyParameter);
        }
    
        public virtual int sp_MPOP__Dashboard_User_DeletedByID(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP__Dashboard_User_DeletedByID", userIDParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_User_Select_Result1> sp_MPOP__Dashboard_User_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_User_Select_Result1>("sp_MPOP__Dashboard_User_Select");
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_UserRole_Select_Result> sp_MPOP__Dashboard_UserRole_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_UserRole_Select_Result>("sp_MPOP__Dashboard_UserRole_Select");
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_UserRole_SelectedByID_Result> sp_MPOP__Dashboard_UserRole_SelectedByID(string userRoleID)
        {
            var userRoleIDParameter = userRoleID != null ?
                new ObjectParameter("UserRoleID", userRoleID) :
                new ObjectParameter("UserRoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_UserRole_SelectedByID_Result>("sp_MPOP__Dashboard_UserRole_SelectedByID", userRoleIDParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_UserRole_Mapping_CRUD(string userRoleID, string userID, string roleID, Nullable<System.DateTime> createdDate, string createdBy, Nullable<System.DateTime> updatedDate, string updatedBy, Nullable<System.DateTime> deletedDate, string deletedBy, Nullable<int> flag)
        {
            var userRoleIDParameter = userRoleID != null ?
                new ObjectParameter("UserRoleID", userRoleID) :
                new ObjectParameter("UserRoleID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var deletedDateParameter = deletedDate.HasValue ?
                new ObjectParameter("DeletedDate", deletedDate) :
                new ObjectParameter("DeletedDate", typeof(System.DateTime));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_UserRole_Mapping_CRUD", userRoleIDParameter, userIDParameter, roleIDParameter, createdDateParameter, createdByParameter, updatedDateParameter, updatedByParameter, deletedDateParameter, deletedByParameter, flagParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_RolePermission_Select_Result> sp_MPOP__Dashboard_RolePermission_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_RolePermission_Select_Result>("sp_MPOP__Dashboard_RolePermission_Select");
        }
    
        public virtual ObjectResult<string> sp_MPOP__Dashboard_UserRole_SelectedByUserIDRoleID(string userID, string roleID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_MPOP__Dashboard_UserRole_SelectedByUserIDRoleID", userIDParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_UserRole_SelectedByUserID_Result> sp_MPOP__Dashboard_UserRole_SelectedByUserID(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_UserRole_SelectedByUserID_Result>("sp_MPOP__Dashboard_UserRole_SelectedByUserID", userIDParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_RolePermission_DeletedByUserRoleID(string userRoleID)
        {
            var userRoleIDParameter = userRoleID != null ?
                new ObjectParameter("UserRoleID", userRoleID) :
                new ObjectParameter("UserRoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_RolePermission_DeletedByUserRoleID", userRoleIDParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_VotingOpeningandClosing_SelectedByID_Result> sp_MPOP__Dashboard_VotingOpeningandClosing_SelectedByID(string votingTimeID)
        {
            var votingTimeIDParameter = votingTimeID != null ?
                new ObjectParameter("VotingTimeID", votingTimeID) :
                new ObjectParameter("VotingTimeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_VotingOpeningandClosing_SelectedByID_Result>("sp_MPOP__Dashboard_VotingOpeningandClosing_SelectedByID", votingTimeIDParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_User_CRUD(string userID, string userName, string password, string encryptedKey, string firstName, string lastName, string roleID, Nullable<bool> isDeleted, Nullable<System.DateTime> createdDate, string createdBy, Nullable<System.DateTime> updatedDate, string updatedBy, Nullable<System.DateTime> deletedDate, string deletedBy, Nullable<int> flag)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var encryptedKeyParameter = encryptedKey != null ?
                new ObjectParameter("EncryptedKey", encryptedKey) :
                new ObjectParameter("EncryptedKey", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var deletedDateParameter = deletedDate.HasValue ?
                new ObjectParameter("DeletedDate", deletedDate) :
                new ObjectParameter("DeletedDate", typeof(System.DateTime));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_User_CRUD", userIDParameter, userNameParameter, passwordParameter, encryptedKeyParameter, firstNameParameter, lastNameParameter, roleIDParameter, isDeletedParameter, createdDateParameter, createdByParameter, updatedDateParameter, updatedByParameter, deletedDateParameter, deletedByParameter, flagParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_VotingOpeningandClosing_CRUD(string votingTimeId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string title, Nullable<int> flag)
        {
            var votingTimeIdParameter = votingTimeId != null ?
                new ObjectParameter("VotingTimeId", votingTimeId) :
                new ObjectParameter("VotingTimeId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_VotingOpeningandClosing_CRUD", votingTimeIdParameter, startDateParameter, endDateParameter, titleParameter, flagParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_VotingOpeningandClosing_Select_Result5> sp_MPOP__Dashboard_VotingOpeningandClosing_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_VotingOpeningandClosing_Select_Result5>("sp_MPOP__Dashboard_VotingOpeningandClosing_Select");
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_RolePermission_SelectedByID_Result1> sp_MPOP__Dashboard_RolePermission_SelectedByID(string rolePermissionID)
        {
            var rolePermissionIDParameter = rolePermissionID != null ?
                new ObjectParameter("RolePermissionID", rolePermissionID) :
                new ObjectParameter("RolePermissionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_RolePermission_SelectedByID_Result1>("sp_MPOP__Dashboard_RolePermission_SelectedByID", rolePermissionIDParameter);
        }
    
        public virtual ObjectResult<string> sp_MPOP__Dashboard_RolePermission_SelectedByRoleID(string roleID)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_MPOP__Dashboard_RolePermission_SelectedByRoleID", roleIDParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_RolePermission_SelectedByRoleIDandPageID_Result> sp_MPOP__Dashboard_RolePermission_SelectedByRoleIDandPageID(string roleID, string pageID)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            var pageIDParameter = pageID != null ?
                new ObjectParameter("PageID", pageID) :
                new ObjectParameter("PageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_RolePermission_SelectedByRoleIDandPageID_Result>("sp_MPOP__Dashboard_RolePermission_SelectedByRoleIDandPageID", roleIDParameter, pageIDParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_RolePermission_CRUD(string rolePermissionID, string roleID, string pageID, Nullable<System.DateTime> createdDate, string createdBy, Nullable<System.DateTime> updatedDate, string updatedBy, Nullable<System.DateTime> deletedDate, string deletedBy, Nullable<int> flag)
        {
            var rolePermissionIDParameter = rolePermissionID != null ?
                new ObjectParameter("RolePermissionID", rolePermissionID) :
                new ObjectParameter("RolePermissionID", typeof(string));
    
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            var pageIDParameter = pageID != null ?
                new ObjectParameter("PageID", pageID) :
                new ObjectParameter("PageID", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var deletedDateParameter = deletedDate.HasValue ?
                new ObjectParameter("DeletedDate", deletedDate) :
                new ObjectParameter("DeletedDate", typeof(System.DateTime));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_RolePermission_CRUD", rolePermissionIDParameter, roleIDParameter, pageIDParameter, createdDateParameter, createdByParameter, updatedDateParameter, updatedByParameter, deletedDateParameter, deletedByParameter, flagParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_RolePermission_DeletedByRoleID(string roleID)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_RolePermission_DeletedByRoleID", roleIDParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_Contestant_CRUD(string contestantID, string name, Nullable<System.DateTime> createdData, string createdBy, Nullable<System.DateTime> updateDate, string updateBy, Nullable<int> voteCount, string remark, string contestantNo, Nullable<int> flag)
        {
            var contestantIDParameter = contestantID != null ?
                new ObjectParameter("ContestantID", contestantID) :
                new ObjectParameter("ContestantID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdDataParameter = createdData.HasValue ?
                new ObjectParameter("CreatedData", createdData) :
                new ObjectParameter("CreatedData", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var voteCountParameter = voteCount.HasValue ?
                new ObjectParameter("VoteCount", voteCount) :
                new ObjectParameter("VoteCount", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var contestantNoParameter = contestantNo != null ?
                new ObjectParameter("ContestantNo", contestantNo) :
                new ObjectParameter("ContestantNo", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_Contestant_CRUD", contestantIDParameter, nameParameter, createdDataParameter, createdByParameter, updateDateParameter, updateByParameter, voteCountParameter, remarkParameter, contestantNoParameter, flagParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_Page_Select_Result3> sp_MPOP__Dashboard_Page_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_Page_Select_Result3>("sp_MPOP__Dashboard_Page_Select");
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_Page_SelectedByID_Result4> sp_MPOP__Dashboard_Page_SelectedByID(string pageID)
        {
            var pageIDParameter = pageID != null ?
                new ObjectParameter("PageID", pageID) :
                new ObjectParameter("PageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_Page_SelectedByID_Result4>("sp_MPOP__Dashboard_Page_SelectedByID", pageIDParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_Page_CRUD(string pageID, string pageName, string pageDescription, Nullable<bool> isDeleted, Nullable<System.DateTime> createdDate, string createdBy, Nullable<System.DateTime> updatedDate, string updatedBy, Nullable<System.DateTime> deletedDate, string deletedBy, Nullable<int> flag)
        {
            var pageIDParameter = pageID != null ?
                new ObjectParameter("PageID", pageID) :
                new ObjectParameter("PageID", typeof(string));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var pageDescriptionParameter = pageDescription != null ?
                new ObjectParameter("PageDescription", pageDescription) :
                new ObjectParameter("PageDescription", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var deletedDateParameter = deletedDate.HasValue ?
                new ObjectParameter("DeletedDate", deletedDate) :
                new ObjectParameter("DeletedDate", typeof(System.DateTime));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_Page_CRUD", pageIDParameter, pageNameParameter, pageDescriptionParameter, isDeletedParameter, createdDateParameter, createdByParameter, updatedDateParameter, updatedByParameter, deletedDateParameter, deletedByParameter, flagParameter);
        }
    
        public virtual ObjectResult<sp_MPOP__Dashboard_Contestant_Select_Result1> sp_MPOP__Dashboard_Contestant_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MPOP__Dashboard_Contestant_Select_Result1>("sp_MPOP__Dashboard_Contestant_Select");
        }
    
        public virtual int sp_MPOP_Dashboard_MPTBillCharge_CRUD(string mPTBillChargeID, string mSISDN, Nullable<decimal> amount, string result, Nullable<System.DateTime> createdDate, string createdBy)
        {
            var mPTBillChargeIDParameter = mPTBillChargeID != null ?
                new ObjectParameter("MPTBillChargeID", mPTBillChargeID) :
                new ObjectParameter("MPTBillChargeID", typeof(string));
    
            var mSISDNParameter = mSISDN != null ?
                new ObjectParameter("MSISDN", mSISDN) :
                new ObjectParameter("MSISDN", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_MPTBillCharge_CRUD", mPTBillChargeIDParameter, mSISDNParameter, amountParameter, resultParameter, createdDateParameter, createdByParameter);
        }
    
        public virtual int sp_MPOP_Dashboard_MyTelBillCharge_CRUD(string myTelBillChargeID, string mSISDN, Nullable<decimal> amount, string result, Nullable<System.DateTime> createdDate, string createdBy)
        {
            var myTelBillChargeIDParameter = myTelBillChargeID != null ?
                new ObjectParameter("MyTelBillChargeID", myTelBillChargeID) :
                new ObjectParameter("MyTelBillChargeID", typeof(string));
    
            var mSISDNParameter = mSISDN != null ?
                new ObjectParameter("MSISDN", mSISDN) :
                new ObjectParameter("MSISDN", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MPOP_Dashboard_MyTelBillCharge_CRUD", myTelBillChargeIDParameter, mSISDNParameter, amountParameter, resultParameter, createdDateParameter, createdByParameter);
        }
    }
}
